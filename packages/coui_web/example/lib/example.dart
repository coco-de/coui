import 'package:coui_web/coui_web.dart';
// Generated by Jaspr.
import 'package:example/jaspr_options.dart';
import 'package:jaspr/server.dart';

// String constants.
abstract final class _Constants {
  static const stylesheetHref = 'styles.css';
  static const stylesheetRel = 'stylesheet';
  static const viewportContent = 'width=device-width, initial-scale=1';
  static const viewportName = 'viewport';
  static const pageTitle = 'CoUI Example - Component Showcase';
  static const showcaseTitle = 'üé® CoUI Component Showcase';
  static const showcaseSubtitle = 'Type-safe DaisyUI components for Jaspr';
  static const successMessage =
      'üéâ Welcome to CoUI! This is a success message.';
  static const warningMessage =
      '‚ö†Ô∏è Please check your input. This is a warning.';
  static const errorMessage =
      '‚ùå Something went wrong. This is an error message.';
  static const infoMessage = "‚ÑπÔ∏è Here's some helpful information for you.";
  static const processMessage =
      'üîÑ Processing your request... (outlined style)';
  static const emailPlaceholder = 'Email address';
  static const passwordPlaceholder = 'Password';
  static const emailType = 'email';
  static const passwordType = 'password';
  static const cancelText = 'Cancel';
  static const signInText = 'Sign In';
  static const footerText = 'Built with ‚ù§Ô∏è using CoUI ‚Ä¢ ';
  static const githubLinkText = 'View on GitHub';
  static const githubUrl = 'https://github.com/PhilippHGerber/ui_components';

  // Section titles and descriptions.
  static const alertSectionTitle = 'Alert Components';
  static const alertSectionDescription =
      'User notifications and feedback messages';
  static const cardSectionTitle = 'Card Components';
  static const cardSectionDescription = 'Content containers and layout blocks';
  static const buttonSectionTitle = 'Button Components';
  static const buttonSectionDescription =
      'Interactive elements with various styles and states';
  static const inputSectionTitle = 'Input Components';
  static const inputSectionDescription =
      'Form inputs with validation and styling';
  static const badgeSectionTitle = 'Badge Components';
  static const badgeSectionDescription =
      'Status indicators, labels, and counters';
  static const integrationSectionTitle = 'Component Integration';
  static const integrationSectionDescription =
      'Examples showing components working together';
}

void main() {
  Jaspr.initializeApp(options: defaultJasprOptions);

  runApp(
    Document(
      body: const CoUIShowcase(),
      head: [
        link(href: _Constants.stylesheetHref, rel: _Constants.stylesheetRel),
        meta(
          content: _Constants.viewportContent,
          name: _Constants.viewportName,
        ),
      ],
      title: _Constants.pageTitle,
    ),
  );
}

class CoUIShowcase extends StatelessComponent {
  const CoUIShowcase({super.key});

  @override
  Component build(BuildContext context) {
    return div(
      [
        // Header section.
        div(
          [
            h1(
              [text(_Constants.showcaseTitle)],
              classes: 'text-4xl font-bold text-center mb-2',
            ),
            p(
              [text(_Constants.showcaseSubtitle)],
              classes: 'text-center text-base-content/70 mb-12',
            ),

            // Alert examples.
            _buildSection(
              content: [
                Alert(
                  [text(_Constants.successMessage)],
                  style: const [Alert.success],
                ),

                Alert(
                  [text(_Constants.warningMessage)],
                  style: const [Alert.warning],
                ),

                Alert(
                  [text(_Constants.errorMessage)],
                  style: const [Alert.error],
                ),

                Alert(
                  [text(_Constants.infoMessage)],
                  style: const [Alert.info],
                ),

                // Outlined style variant.
                Alert(
                  [text(_Constants.processMessage)],
                  style: const [Alert.info, Alert.outline],
                ),
              ],
              description: _Constants.alertSectionDescription,
              title: _Constants.alertSectionTitle,
            ),

            // Card examples.
            _buildSection(
              content: [
                div(
                  [
                    // Basic card example.
                    Card(
                      [
                        CardBody([
                          CardTitle([text('Basic Card')]),
                          p([
                            text(
                              'This is a simple card with some content inside.',
                            ),
                          ]),
                          CardActions([
                            Button(
                              [text('Action')],
                              style: const [Button.primary, Button.sm],
                            ),
                          ]),
                        ]),
                      ],
                      style: const [BgUtil.base300, Effects.shadowLg],
                    ),

                    // Card with image example.
                    Card(
                      [
                        Figure([
                          img(
                            alt: 'Random image',
                            src: 'https://picsum.photos/400/200?random=1',
                          ),
                        ]),
                        CardBody([
                          CardTitle([
                            text('Image Card'),
                            Badge(
                              [text('NEW')],
                              style: const [Badge.secondary],
                            ),
                          ]),
                          p([text('Card with a beautiful image and badge.')]),
                          CardActions([
                            Button([text('View')], style: const [Button.ghost]),
                            Button(
                              [text('Buy Now')],
                              style: const [Button.primary],
                            ),
                          ]),
                        ]),
                      ],
                      style: const [BgUtil.base300, Effects.shadowLg],
                    ),

                    // Compact card example.
                    Card(
                      [
                        CardBody([
                          CardTitle([text('Compact Card')]),
                          p([text('Smaller card perfect for dashboards.')]),
                        ]),
                      ],
                      style: const [Card.border, Effects.shadowLg, Card.xs],
                    ),
                  ],
                  classes:
                      'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4',
                ),
              ],
              description: _Constants.cardSectionDescription,
              title: _Constants.cardSectionTitle,
            ),

            // Button examples.
            _buildSection(
              content: [
                // Color variants section.
                div(
                  [
                    Button([text('Neutral')], style: const [Button.neutral]),
                    Button([text('Primary')], style: const [Button.primary]),
                    Button(
                      [text('Secondary')],
                      style: const [Button.secondary],
                    ),
                    Button([text('Accent')], style: const [Button.accent]),
                    Button([text('Info')], style: const [Button.info]),
                    Button([text('Success')], style: const [Button.success]),
                    Button([text('Warning')], style: const [Button.warning]),
                    Button([text('Error')], style: const [Button.error]),
                  ],
                  classes: 'flex flex-wrap gap-2 mb-4',
                ),

                // Style variants section.
                div(
                  [
                    Button([text('Outline')], style: const [Button.outline]),
                    Button([text('Ghost')], style: const [Button.ghost]),
                    Button([text('Link')], style: const [Button.link]),
                    Button([text('Soft')], style: const [Button.soft]),
                    Button([text('Dash')], style: const [Button.dash]),
                  ],
                  classes: 'flex flex-wrap gap-2 mb-4',
                ),

                // Size variants section.
                div(
                  [
                    Button([text('XS')], style: const [Button.xs]),
                    Button([text('SM')], style: const [Button.sm]),
                    Button([text('MD')], style: const [Button.md]),
                    Button([text('LG')], style: const [Button.lg]),
                    Button([text('XL')], style: const [Button.xl]),
                  ],
                  classes: 'flex flex-wrap items-center gap-2 mb-4',
                ),

                // Shape variants section.
                div(
                  [
                    Button([text('Wide Button')], style: const [Button.wide]),
                    Button([text('‚≠ê')], style: const [Button.square]),
                    Button([text('üíù')], style: const [Button.circle]),
                    Button([text('Block Button')], style: const [Button.block]),
                  ],
                  classes: 'flex flex-wrap items-center gap-2',
                ),
              ],
              description: _Constants.buttonSectionDescription,
              title: _Constants.buttonSectionTitle,
            ),

            // Input examples.
            _buildSection(
              content: [
                div(
                  [
                    // Basic inputs section.
                    div([
                      label(
                        [text('Email Address')],
                        classes: 'block text-sm font-medium mb-2',
                      ),
                      const Input(
                        placeholder: 'Enter your email',
                        style: [Input.primary],
                        type: 'email',
                      ),
                    ]),

                    div([
                      label(
                        [text('Password')],
                        classes: 'block text-sm font-medium mb-2',
                      ),
                      const Input(
                        placeholder: 'Enter password',
                        style: [Input.secondary],
                        type: 'password',
                      ),
                    ]),

                    // Different sizes section.
                    div([
                      label(
                        [text('Small Input')],
                        classes: 'block text-sm font-medium mb-2',
                      ),
                      const Input(placeholder: 'Small size', style: [Input.sm]),
                    ]),

                    div([
                      label(
                        [text('Large Input')],
                        classes: 'block text-sm font-medium mb-2',
                      ),
                      const Input(placeholder: 'Large size', style: [Input.lg]),
                    ]),

                    // Validation states section.
                    div([
                      label(
                        [text('Success State')],
                        classes: 'block text-sm font-medium mb-2',
                      ),
                      const Input(
                        placeholder: 'Valid input',
                        style: [Input.success],
                      ),
                    ]),

                    div([
                      label(
                        [text('Error State')],
                        classes: 'block text-sm font-medium mb-2',
                      ),
                      const Input(
                        placeholder: 'Invalid input',
                        style: [Input.error],
                      ),
                    ]),
                  ],
                  classes: 'grid grid-cols-1 md:grid-cols-2 gap-4',
                ),

                // Ghost style section.
                div(
                  [
                    label(
                      [text('Ghost Style Input')],
                      classes: 'block text-sm font-medium mb-2',
                    ),
                    const Input(
                      placeholder: 'Transparent background',
                      style: [Input.ghost, Input.lg],
                    ),
                  ],
                  classes: 'mt-4',
                ),
              ],
              description: _Constants.inputSectionDescription,
              title: _Constants.inputSectionTitle,
            ),

            // Badge examples.
            _buildSection(
              content: [
                // Color variants section.
                div(
                  [
                    Badge([text('Neutral')], style: const [Badge.neutral]),
                    Badge([text('Primary')], style: const [Badge.primary]),
                    Badge([text('Secondary')], style: const [Badge.secondary]),
                    Badge([text('Accent')], style: const [Badge.accent]),
                    Badge([text('Info')], style: const [Badge.info]),
                    Badge([text('Success')], style: const [Badge.success]),
                    Badge([text('Warning')], style: const [Badge.warning]),
                    Badge([text('Error')], style: const [Badge.error]),
                  ],
                  classes: 'flex flex-wrap gap-2 mb-4',
                ),

                // Style variants section.
                div(
                  [
                    Badge([text('Outline')], style: const [Badge.outline]),
                    Badge([text('Ghost')], style: const [Badge.ghost]),
                    Badge([text('Soft')], style: const [Badge.soft]),
                    Badge([text('Dash')], style: const [Badge.dash]),
                  ],
                  classes: 'flex flex-wrap gap-2 mb-4',
                ),

                // Size variants section.
                div(
                  [
                    Badge([text('XS')], style: const [Badge.xs]),
                    Badge([text('SM')], style: const [Badge.sm]),
                    Badge([text('MD')], style: const [Badge.md]),
                    Badge([text('LG')], style: const [Badge.lg]),
                    Badge([text('XL')], style: const [Badge.xl]),
                  ],
                  classes: 'flex flex-wrap items-center gap-2 mb-4',
                ),

                // Practical examples section.
                div(
                  [
                    p([
                      text('Status: '),
                      Badge(
                        [text('Online')],
                        style: const [Badge.success, Badge.sm],
                      ),
                    ]),
                    p([
                      text('Notifications '),
                      Badge([text('3')], style: const [Badge.error, Badge.xs]),
                    ]),
                    p([
                      text('Version '),
                      Badge([text('v1.2.0')], style: const [Badge.ghost]),
                    ]),
                  ],
                  classes: 'space-y-2',
                ),
              ],
              description: _Constants.badgeSectionDescription,
              title: _Constants.badgeSectionTitle,
            ),

            // Integration examples.
            _buildSection(
              content: [
                // Login card example.
                div(
                  [
                    Card(
                      [
                        CardBody([
                          div(
                            [
                              CardTitle([
                                text('Login'),
                                Badge(
                                  [text('Secure')],
                                  style: const [Badge.success, Badge.sm],
                                ),
                              ]),
                            ],
                            classes: 'text-center mb-4',
                          ),
                          Alert(
                            [
                              text(
                                'Please enter your credentials to continue.',
                              ),
                            ],
                            style: const [Alert.info, Alert.soft],
                          ),
                          div(
                            [
                              const Input(
                                placeholder: _Constants.emailPlaceholder,
                                style: [Input.primary],
                                type: _Constants.emailType,
                              ),
                              const Input(
                                placeholder: _Constants.passwordPlaceholder,
                                style: [Input.primary],
                                type: _Constants.passwordType,
                              ),
                            ],
                            classes: 'space-y-4 mt-4',
                          ),
                          CardActions([
                            Button(
                              [text(_Constants.cancelText)],
                              style: const [Button.ghost],
                            ),
                            Button(
                              [text(_Constants.signInText)],
                              style: const [Button.primary],
                            ),
                          ]),
                        ]),
                      ],
                      style: const [Card.border, Card.lg],
                    ),
                  ],
                  classes: 'max-w-md mx-auto',
                ),
              ],
              description: _Constants.integrationSectionDescription,
              title: _Constants.integrationSectionTitle,
            ),

            // Footer section.
            div(
              [
                p(
                  [
                    text(_Constants.footerText),
                    a(
                      [text(_Constants.githubLinkText)],
                      classes: 'link link-primary',
                      href: _Constants.githubUrl,
                    ),
                  ],
                  classes: 'text-base-content/60',
                ),
              ],
              classes: 'text-center mt-16 pt-8 border-t border-base-300',
            ),
          ],
          classes: 'max-w-6xl mx-auto',
        ),
      ],
      classes: 'min-h-screen bg-base-100 p-8',
    );
  }

  static Component _buildSection({
    required List<Component> content,
    required String description,
    required String title,
  }) {
    return div(
      [
        div(
          [
            h2([text(title)], classes: 'text-2xl font-bold mb-2'),
            p([text(description)], classes: 'text-base-content/70'),
          ],
          classes: 'mb-8',
        ),
        div(content, classes: 'space-y-6'),
      ],
      classes: 'mb-16',
    );
  }
}
